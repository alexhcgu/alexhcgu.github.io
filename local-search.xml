<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>STM32F103C8T7 Developer Board</title>
    <link href="/2023/07/01/stm32board/"/>
    <url>/2023/07/01/stm32board/</url>
    
    <content type="html"><![CDATA[<h1 id="STM32F103C8T7-Developer-Board"><a href="#STM32F103C8T7-Developer-Board" class="headerlink" title="STM32F103C8T7 Developer Board"></a>STM32F103C8T7 Developer Board</h1><p>5V power, the system utilizes SWD for program downloading and includes built-in LED indicators and onboard buttons.</p><h2 id="Schematic"><a href="#Schematic" class="headerlink" title="Schematic"></a>Schematic</h2><p><img src="https://s2.loli.net/2022/03/27/PAnSlt7XzoqIpkc.png"></p><h2 id="PCB"><a href="#PCB" class="headerlink" title="PCB"></a>PCB</h2><p><img src="https://s2.loli.net/2022/03/27/fpyKj38MsLRN7JD.png"></p><h2 id="Assembling"><a href="#Assembling" class="headerlink" title="Assembling"></a>Assembling</h2><h3 id="PCB-1"><a href="#PCB-1" class="headerlink" title="PCB"></a>PCB</h3><p><img src="https://s2.loli.net/2022/03/27/x3lHXE7JQnOqKj4.jpg"></p><h3 id="Apply-solder-paste-and-place-on-heating-platform"><a href="#Apply-solder-paste-and-place-on-heating-platform" class="headerlink" title="Apply solder paste and place on heating platform"></a>Apply solder paste and place on heating platform</h3><p><img src="https://s2.loli.net/2022/03/27/FZ1p3fKUvVcr86y.jpg"></p><h3 id="Boot-Successfully"><a href="#Boot-Successfully" class="headerlink" title="Boot Successfully"></a>Boot Successfully</h3><p><img src="https://s2.loli.net/2022/03/27/ty5jhLpR8IOG3Fc.png"></p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
    </categories>
    
    
    <tags>
      
      <tag>schematic</tag>
      
      <tag>pcb</tag>
      
      <tag>stm32</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ESP32C3 Board</title>
    <link href="/2023/03/15/esp32board/"/>
    <url>/2023/03/15/esp32board/</url>
    
    <content type="html"><![CDATA[<h1 id="ESP32C3-Bluetooth-WiFi-Microcontroller-Board"><a href="#ESP32C3-Bluetooth-WiFi-Microcontroller-Board" class="headerlink" title="ESP32C3 Bluetooth WiFi Microcontroller Board"></a>ESP32C3 Bluetooth WiFi Microcontroller Board</h1><p>5V power supply with CH340 USB to serial chip.</p><h2 id="Schematic"><a href="#Schematic" class="headerlink" title="Schematic"></a>Schematic</h2><p><img src="https://s2.loli.net/2022/03/27/eOM8no671q5SlGR.png"></p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
    </categories>
    
    
    <tags>
      
      <tag>esp32</tag>
      
      <tag>schematic</tag>
      
      <tag>pcb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>In-Game Autonomous Driving Based on CNN</title>
    <link href="/2022/01/20/ets2ad/"/>
    <url>/2022/01/20/ets2ad/</url>
    
    <content type="html"><![CDATA[<iframe width="787" height="556" src="https://www.youtube.com/embed/R2gP6NiPhMU" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe><h2 id="Inspiration"><a href="#Inspiration" class="headerlink" title="Inspiration"></a>Inspiration</h2><p>Autonomous driving is one of the hottest fields these days. However, learners&#x2F;beginners may find it difficult to explore it and try out because it needs a modified real car. So why not use driving simulation games to try it?</p><h2 id="What-it-does"><a href="#What-it-does" class="headerlink" title="What it does"></a>What it does</h2><p>Just like a real autonomous driving car does - It grabs the images of the surrounding environment, in my case it is a screenshot and feed it into a trained CNN. CNN will output the command to control the car.</p><h2 id="How-we-built-it"><a href="#How-we-built-it" class="headerlink" title="How we built it"></a>How we built it</h2><p>I use win32 api to grab the screen and record the actions on the keyboard. These information are used as training data for the CNN. The CNN is based on Tensorflow and training on Google Colab using Google Cloud services.</p><p>This is an sample input. A grayscale image with two labels indicating throttle and steering.</p><p><img src="https://s2.loli.net/2022/01/16/72jagDhCbFyZV1k.png"></p><p>By plotting the bar graph of the data distribution, I find the data is not balanced. Most data has the same label [1,0] which means most of the time, the truck is moving straightforward. It is reasonable in real life but in machine learning it is bad as it will mislead the model. </p><p><img src="https://s2.loli.net/2022/01/16/3EWuvbc4yZ6mOpe.png"></p><p>The problem can be solved by randomly drop some images. I dropped 70% of them in this case. Here is the final result:</p><p><img src="https://s2.loli.net/2022/01/16/JhXlmDRvb9Bf2sU.png"></p><p>For the remaining image, some transformation can be done to expand the training data size and increases the noise resistibility of the model. For example, flip some image to simulate right&#x2F;left turns and change the image brightness to simulate night&#x2F;days.</p><p><img src="https://s2.loli.net/2022/01/16/mzvLuiQVOA4PXej.png"></p><p>The graph below shows the training&#x2F;validation accuracy&#x2F;loss of the final model. Notice that the validation accuracy curve is not flat yet so the model can be further trained for better performance. </p><p><img src="https://s2.loli.net/2022/01/16/3JiT2cRvFz9Zabo.png"></p><h2 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h2><p>As there is not enough data for the CNN, overfitting occurs. I add some transformations on the input data and some dropout layers to fix it.</p><h2 id="Accomplishments-that-we’re-proud-of"><a href="#Accomplishments-that-we’re-proud-of" class="headerlink" title="Accomplishments that we’re proud of"></a>Accomplishments that we’re proud of</h2><p>I manage to build an autonomous driving CNN successfully with only a few hours of data collection. My training data size is about 5GB and it is very small compared to some in-business NNs which usually have training data of PB scale.  Have such a small size of training data means it has to sacrifice accuracy, but I manage to keep the accuracy of 73%</p><h2 id="What-we-learned"><a href="#What-we-learned" class="headerlink" title="What we learned"></a>What we learned</h2><p>How to collect and transform data. How to tune parameters of NN. Dealing with under&#x2F;overfitting.</p><h2 id="What’s-next-for-In-Game-Autonomous-Driving-Based-on-CNN"><a href="#What’s-next-for-In-Game-Autonomous-Driving-Based-on-CNN" class="headerlink" title="What’s next for In-Game Autonomous Driving Based on CNN"></a>What’s next for In-Game Autonomous Driving Based on CNN</h2><p>The performance of the model can be improved by training with more data.</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p><a href="https://github.com/Ghckodak/In-Game-Autonomous-Driving-Based-on-CNN">https://github.com/Ghckodak/In-Game-Autonomous-Driving-Based-on-CNN</a></p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tensorflow</tag>
      
      <tag>machine learning</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Switch</title>
    <link href="/2022/01/15/switch/"/>
    <url>/2022/01/15/switch/</url>
    
    <content type="html"><![CDATA[<h2 id="PCB-Design"><a href="#PCB-Design" class="headerlink" title="PCB Design"></a>PCB Design</h2><p><img src="https://s2.loli.net/2022/02/03/1RGJ4ABmfxryHE8.png" alt="Schematic"></p><p><img src="https://s2.loli.net/2022/02/03/4e2jgNcyvLrutf8.png" alt="PCB"></p><h2 id="Case-Design"><a href="#Case-Design" class="headerlink" title="Case Design"></a>Case Design</h2><p><img src="https://s2.loli.net/2022/02/03/xnBQkhKPYTAXvpj.png"></p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
    </categories>
    
    
    <tags>
      
      <tag>arduino</tag>
      
      <tag>raspberry pi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ambilight Monitor</title>
    <link href="/2021/11/03/am/"/>
    <url>/2021/11/03/am/</url>
    
    <content type="html"><![CDATA[<p>A cool design as the background lights change with the content of the monitor and makes the audience feel more immersed.</p><span id="more"></span><h2 id="About-the-Project"><a href="#About-the-Project" class="headerlink" title="About the Project"></a>About the Project</h2><p>There is a similar project called <a href="https://learn.adafruit.com/adalight-diy-ambient-tv-lighting/">“Adalight Project Pack”</a>. It provides some kits to DIY a Ambilight. It means my project was doable. However, the Adafruit kit uses lots of individual LED bulbs mounting behind the monitor, which is costly and messy. Using LED strips may be a better choice. </p><h2 id="Circuit-Design"><a href="#Circuit-Design" class="headerlink" title="Circuit Design"></a>Circuit Design</h2><p>Each LED will consume about 20mA. I have 40 LEDs in my design so 800mA is needed. The maximum current to draw from an Arduino pin is 500mA (without external power) and 1A (with external power). To simplify the circuit I decided to connect LED strips directly to Arduino pins, so I have to use the external power to feed the Arduino. Make sure to set a common ground properly.</p><p><img src="https://s2.loli.net/2021/12/25/ePRZv1VbiGYCJmq.png"></p><p>Wire the LED strips and connect them to Arduino. I found a useful software called <a href="https://lightpack.tv/pages/downloads">Prismatik</a>. It will divide the edge of the screen into several small blocks according to the LED layout, measure the average RGB value, and send it to Arduino through the USB port. Arduino will control each LED accordingly by serial communication with the help of the FastLED library.</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p>The LEDs are controlled by FastLED library.</p><p><em>“FastLED is a fast, efficient, easy-to-use Arduino library for programming addressable LED strips and pixels such as WS2810, WS2811, LPD8806, Neopixel and <a href="https://github.com/FastLED/FastLED/wiki/Chipset-reference">more</a>. FastLED is used by thousands of developers, in countless art and hobby projects, and in numerous commercial products”–From <a href="http://fastled.io/">http://fastled.io/</a></em></p><p>This is a sample code for Arduino from the Internet. There is also a similar code from Adafruit on <a href="https://github.com/adafruit/Adalight">Github</a>.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;FastLED.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> NUM_LEDS 38</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> LED_DATA_PIN 3</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> NUM_BYTES (NUM_LEDS*3) <span class="hljs-comment">// 3 colors  </span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> BRIGHTNESS 100</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> UPDATES_PER_SECOND 100</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> TIMEOUT 3000</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MODE_ANIMATION 0</span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> MODE_AMBILIGHT 1</span><br><span class="hljs-type">uint8_t</span> mode = MODE_ANIMATION;<br><br>byte MESSAGE_PREAMBLE[] = &#123; <span class="hljs-number">0x00</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x09</span> &#125;;<br><span class="hljs-type">uint8_t</span> PREAMBLE_LENGTH = <span class="hljs-number">10</span>;<br><span class="hljs-type">uint8_t</span> current_preamble_position = <span class="hljs-number">0</span>;<br><br><span class="hljs-type">unsigned</span> <span class="hljs-type">long</span> last_serial_available = <span class="hljs-number">-1L</span>;<br><br><span class="hljs-type">uint8_t</span> led_counter = <span class="hljs-number">0</span>;<br><span class="hljs-type">uint8_t</span> byte_counter = <span class="hljs-number">0</span>;<br><br>CRGB leds[NUM_LEDS];<br>byte buffer[NUM_BYTES];<br><br><span class="hljs-comment">// Filler animation attributes</span><br>CRGBPalette16 currentPalette = RainbowColors_p;<br>TBlendType    currentBlending = LINEARBLEND;<br><span class="hljs-type">uint8_t</span> startIndex = <span class="hljs-number">0</span>;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">setup</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>Serial.<span class="hljs-built_in">begin</span>(<span class="hljs-number">115200</span>);<br>FastLED.<span class="hljs-built_in">clear</span>(<span class="hljs-literal">true</span>);<br>FastLED.<span class="hljs-built_in">addLeds</span>&lt;WS2811, LED_DATA_PIN, GRB&gt;(leds, NUM_LEDS);<br>FastLED.<span class="hljs-built_in">setBrightness</span>(BRIGHTNESS);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">loop</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">switch</span> (mode) &#123;<br>        <span class="hljs-keyword">case</span> MODE_ANIMATION: <br>            <span class="hljs-built_in">fillLEDsFromPaletteColors</span>();<br>            <span class="hljs-keyword">break</span>;<br>        <br>        <span class="hljs-keyword">case</span> MODE_AMBILIGHT:<br>            <span class="hljs-built_in">processIncomingData</span>();<br>            <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">processIncomingData</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">waitForPreamble</span>(TIMEOUT))<br>    &#123;<br>        Serial.<span class="hljs-built_in">readBytes</span>(buffer, NUM_BYTES);<br><br>        <span class="hljs-comment">/* DEBUG</span><br><span class="hljs-comment">        for (int i = 0; i &lt; NUM_BYTES; i++)</span><br><span class="hljs-comment">        &#123;</span><br><span class="hljs-comment">            Serial.write((char)buffer[i]);</span><br><span class="hljs-comment">        &#125;</span><br><span class="hljs-comment">        */</span><br><br>        <span class="hljs-keyword">while</span> (byte_counter &lt; NUM_BYTES)<br>        &#123;<br>            byte green = buffer[byte_counter++];<br>    byte blue = buffer[byte_counter++];<br>            byte red = buffer[byte_counter++];<br><br>            leds[led_counter++] = <span class="hljs-built_in">CRGB</span>(red, green, blue);<br>        &#125;<br><br>        FastLED.<span class="hljs-built_in">show</span>();<br><br>        byte_counter = <span class="hljs-number">0</span>;<br>        led_counter = <span class="hljs-number">0</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>        mode = MODE_ANIMATION;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">bool</span> <span class="hljs-title">waitForPreamble</span><span class="hljs-params">(<span class="hljs-type">int</span> timeout)</span></span><br><span class="hljs-function"></span>&#123;<br>    last_serial_available = <span class="hljs-built_in">millis</span>();<br>    <span class="hljs-keyword">while</span> (current_preamble_position &lt; PREAMBLE_LENGTH)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (Serial.<span class="hljs-built_in">available</span>() &gt; <span class="hljs-number">0</span>)<br>        &#123;<br>            last_serial_available = <span class="hljs-built_in">millis</span>();<br><br>            <span class="hljs-keyword">if</span> (Serial.<span class="hljs-built_in">read</span>() == MESSAGE_PREAMBLE[current_preamble_position])<br>            &#123;<br>                current_preamble_position++;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>                current_preamble_position = <span class="hljs-number">0</span>;<br>            &#125;<br>        &#125;<br><br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">millis</span>() - last_serial_available &gt; timeout)<br>        &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>    current_preamble_position = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">fillLEDsFromPaletteColors</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    startIndex++; <span class="hljs-comment">// speed</span><br><br>    <span class="hljs-type">uint8_t</span> colorIndex = startIndex;<br>    <span class="hljs-keyword">for</span>( <span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; NUM_LEDS; i++) &#123;<br>        leds[i] = <span class="hljs-built_in">ColorFromPalette</span>(currentPalette, colorIndex, BRIGHTNESS, currentBlending);<br>        colorIndex += <span class="hljs-number">3</span>;<br>    &#125;<br><br>    FastLED.<span class="hljs-built_in">delay</span>(<span class="hljs-number">1000</span> / UPDATES_PER_SECOND);<br><br>    <span class="hljs-keyword">if</span> (Serial.<span class="hljs-built_in">available</span>() &gt; <span class="hljs-number">0</span>)<br>    &#123;<br>        mode = MODE_AMBILIGHT;<br>    &#125;<br></code></pre></td></tr></table></figure><h2 id="Prismatik"><a href="#Prismatik" class="headerlink" title="Prismatik"></a>Prismatik</h2><p>Prismatik samples the screen at a certain rate and send the data to Arduino through USB port. It also provides a friendly setup wizard to set the layout of the LEDs.</p><p><img src="https://z3.ax1x.com/2021/03/24/6qdmFO.png" alt="Prismatik"></p><h3 id="Setting-the-Prismatik"><a href="#Setting-the-Prismatik" class="headerlink" title="Setting the Prismatik"></a>Setting the Prismatik</h3><p><strong>1</strong> Selecting the correct LED type, serial communication port, and the Baud rate.</p><p><img src="https://z3.ax1x.com/2021/03/24/6qdnYD.md.png"></p><p><strong>2</strong> Setting the correct LED layout according to the wiring.</p><p><img src="https://z3.ax1x.com/2021/03/24/6qdZTK.md.png"></p><p><img src="https://z3.ax1x.com/2021/03/24/6qIhgs.gif"></p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
    </categories>
    
    
    <tags>
      
      <tag>rgb</tag>
      
      <tag>arduino</tag>
      
      <tag>led</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Custom Corsair Lightning</title>
    <link href="/2021/09/10/CorsairLightning/"/>
    <url>/2021/09/10/CorsairLightning/</url>
    
    <content type="html"><![CDATA[<p>A custom lighting solution co-works with Corsair iCue.</p><span id="more"></span><hr><h1 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h1><p>A desktop full of gaming gears and RGB LEDs is a dream for all geeks and gamers. Using the mouse, keyboard, earphone, and mouse pad from the same manufacturer will definitely enhance the experiment as they are able to sync the RGB effect with each other and even with the games. It will make the user feel more immersed. For example, <a href="https://www.corsair.com/us/en/icue">Corsair</a> or Razer products. Unfortunately, they are not cheap, especially those with fancy RGBs. A simple lighting kit will cost me $45 USD! 😅</p><p><img src="https://s2.loli.net/2021/12/25/Ke3NBr6ElLwtcSU.png"></p><p>As a Corsair user, I want to set up my desk with Corsair iCue RGBs with minimum cost. Why can’t I build one by myself? There’s tons of cheap LED strips on AliExpress. </p><h1 id="And-there’s-a-solution"><a href="#And-there’s-a-solution" class="headerlink" title="And there’s a solution!"></a>And there’s a solution!</h1><p>Then I found this on Github—<a href="https://github.com/Legion2/CorsairLightingProtocol">Corsair Lighting Protocol</a>. It allows the Corsair iCue software to communicate with Arduino and control the LED strips. By doing so, a $10 LED strip from Aliexpress can be used instead of a $45 USD official one.<br>Notice that the code only works with ATmega32U4, which works for Arduino Micro. For an Arduino Uno, <a href="https://github.com/NicoHood/HoodLoader2">HoodLoader2</a> bootloader is needed. The Arduino can only provide 500mA current without an external power supply. So I have to use external power for the LED strips. </p><h1 id="Circuit-design"><a href="#Circuit-design" class="headerlink" title="Circuit design"></a>Circuit design</h1><p><img src="https://s2.loli.net/2021/12/25/ePRZv1VbiGYCJmq.png"></p><p>I use an addressable RGB LED strip powered by a WS2811 chip. Addressable LEDs allow me to control the lighting effect for every individual LED and that’s exactly I want. The WS2811 and Arduino share a common 5V power supply and a common ground. Wiring the circuit is simple and after uploading the code to Arduino under the instruction, the LED strip works as expected.</p><p><img src="https://z3.ax1x.com/2021/03/24/6qISAS.gif"></p><h1 id="How-it-works"><a href="#How-it-works" class="headerlink" title="How it works?"></a>How it works?</h1><p>The library simulates Arduino as a USB HID device with a Corsair ID. When plug in the PC iCue recognize it as a Corsair device and send HID command to it. By receiving these commands and sending them to WS2811 using FastLED library, iCue is able to control a LED strip with dedicated lighting effect.</p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
    </categories>
    
    
    <tags>
      
      <tag>corsair</tag>
      
      <tag>rgb</tag>
      
      <tag>arduino</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ROS car</title>
    <link href="/2021/09/01/rcar/"/>
    <url>/2021/09/01/rcar/</url>
    
    <content type="html"><![CDATA[<h2 id="In-Progress…"><a href="#In-Progress…" class="headerlink" title="In Progress…"></a>In Progress…</h2><p><img src="https://s2.loli.net/2022/02/04/PDdGfQmq3gTY8Ks.jpg"></p><h2 id="Final-look"><a href="#Final-look" class="headerlink" title="Final look"></a>Final look</h2><p><img src="https://s2.loli.net/2022/02/04/tSF1DxQmPdrG2j3.jpg"></p><p><img src="https://s2.loli.net/2022/02/04/ILPVM7ErnA8mq2D.jpg"></p><h2 id="Desktop-Control"><a href="#Desktop-Control" class="headerlink" title="Desktop Control"></a>Desktop Control</h2><p><img src="https://s2.loli.net/2022/02/04/HmvSKaZRLuX5GDb.png"></p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><p><a href="https://github.com/Ghckodak/rcar">Ghckodak&#x2F;rcar: A ROS impletion (github.com)</a></p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
    </categories>
    
    
    <tags>
      
      <tag>arduino</tag>
      
      <tag>python</tag>
      
      <tag>ros</tag>
      
      <tag>raspberry pi</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OneDrive Auto Synchronize</title>
    <link href="/2021/03/01/oas/"/>
    <url>/2021/03/01/oas/</url>
    
    <content type="html"><![CDATA[<p>I found this useful project on Github. <a href="https://github.com/skilion/onedrive">OneDrive Free Client</a>. It is basically an OneDrive client for Linux.</p><span id="more"></span><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt install libcurl4-openssl-dev<br>sudo apt install libsqlite3-dev<br>git clone https://github.com/skilion/onedrive.git<br>cd onedrive<br>make<br>sudo make install<br></code></pre></td></tr></table></figure><h3 id="First-run"><a href="#First-run" class="headerlink" title="First run"></a>First run</h3><p>Type:</p><pre><code class="hljs">onedrive</code></pre><p>And log in the Microsoft account using the link generated.</p>]]></content>
    
    
    <categories>
      
      <category>technical</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
      <tag>onedrive</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Ubuntu20.04 remote desktop connection</title>
    <link href="/2021/02/12/urd/"/>
    <url>/2021/02/12/urd/</url>
    
    <content type="html"><![CDATA[<p>Remote control the Ubuntu desktop.</p><span id="more"></span><p><strong>1</strong> Go to settings&gt;sharing&gt;remote desktop. Turn it on. Lite system doesn’t have such an option. Install vino first by</p><pre><code class="hljs">sudo apt-get install vino </code></pre><p><strong>2</strong> Install xrdp by </p><pre><code class="hljs">sudo apt-get install xrdp</code></pre><p><strong>3</strong> Install dconf-editor</p><pre><code class="hljs">sudo apt-get install dconf-editor</code></pre><p>Go to org-&gt;gnome-&gt;desktop-&gt;remote-access, unselect “requlre-encryption”.</p><p>Then the desktop can be connected through remote connection.</p>]]></content>
    
    
    <categories>
      
      <category>technical</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Add picture to blog using JsDelivr CDN</title>
    <link href="/2021/01/03/jscdn/"/>
    <url>/2021/01/03/jscdn/</url>
    
    <content type="html"><![CDATA[<p>JSDelivr is a free open-source public CDN.</p><span id="more"></span><h2 id="What-is-a-CDN"><a href="#What-is-a-CDN" class="headerlink" title="What is a CDN?"></a>What is a CDN?</h2><p><em>A <strong>content delivery network</strong>, or <strong>content distribution network</strong> (<strong>CDN</strong>), is a geographically distributed network of <a href="https://en.wikipedia.org/wiki/Proxy_server">proxy servers</a> and their <a href="https://en.wikipedia.org/wiki/Data_center">data centers</a>. The goal is to provide high availability and performance by distributing the service spatially relative to <a href="https://en.wikipedia.org/wiki/End_user">end users</a>. —From Wikipedia</em></p><h2 id="Pull"><a href="#Pull" class="headerlink" title="Pull"></a>Pull</h2><p>Create a new Github repository.</p><p><img src="https://z3.ax1x.com/2021/03/25/6Xue9x.md.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init <span class="hljs-comment"># initialize</span><br>git remote add origin <span class="hljs-comment">#your repository address</span><br>git pull origin master <span class="hljs-comment">#pull the Github repository to local </span><br></code></pre></td></tr></table></figure><h2 id="Push"><a href="#Push" class="headerlink" title="Push"></a>Push</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .   <span class="hljs-comment"># add all files</span><br>git commit -m <span class="hljs-string">&#x27;file descriptions&#x27;</span> <br>git push origin master  <span class="hljs-comment">#push local repository to Github</span><br></code></pre></td></tr></table></figure><p>Then go to Github and draft a new release.</p><p><img src="https://z3.ax1x.com/2021/03/25/6Xum36.md.png"></p><h2 id="Link-resources-from-JsDelivr"><a href="#Link-resources-from-JsDelivr" class="headerlink" title="Link resources from JsDelivr"></a>Link resources from JsDelivr</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>cdn.jsdelivr.net<span class="hljs-regexp">/gh/u</span>ser_name<span class="hljs-regexp">/repository_name@version_number/</span>file_path<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>technical</category>
      
    </categories>
    
    
    <tags>
      
      <tag>JsDelivr</tag>
      
      <tag>cdn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Running a Minecraft Server on Raspberry Pi</title>
    <link href="/2020/12/20/mcserver/"/>
    <url>/2020/12/20/mcserver/</url>
    
    <content type="html"><![CDATA[<p>Minecraft is a sandbox video game developed my Mojang. It is one of the most popular video games in the world. In Minecraft Wikipedia page, it introduces:</p><p><em>In Minecraft, players explore a blocky, <a href="https://en.wikipedia.org/wiki/Procedurally-generated">procedurally-generated</a> <a href="https://en.wikipedia.org/wiki/3D_computer_graphics">3D</a> world with infinite terrain, and may discover and extract raw materials, <a href="https://en.wikipedia.org/wiki/Crafting_(gaming)">craft</a> tools and items, and build structures or <a href="https://en.wikipedia.org/wiki/Earthworks_(engineering)">earthworks</a>. Depending on <a href="https://en.wikipedia.org/wiki/Game_mode">game mode</a>, players can fight computer-controlled “<a href="https://en.wikipedia.org/wiki/Mob_(video_games)">mobs</a>“, as well as cooperate with or compete against other players in the same world. Game modes include a <a href="https://en.wikipedia.org/wiki/Survival_mode">survival mode</a>, in which players must acquire resources to build the world and maintain health, and a creative mode, where players have unlimited resources. Players can <a href="https://en.wikipedia.org/wiki/Minecraft_mods">modify the game</a> to create new gameplay mechanics, items, and assets.</em></p><p>If you want to play with your friends, an doable method is to pay $14.99 for an official server. Fortunately, we can also set up the server on Raspberry Pi with almost zero cost.</p><h2 id="Java-or-Bedrock"><a href="#Java-or-Bedrock" class="headerlink" title="Java or Bedrock?"></a>Java or Bedrock?</h2><p>Notice there is two version of Minecraft. Java edition uses Java language and works only on PC. Bedrock edition uses C++ and works on Android, iOS, Nintendo, and Win10 PC. It is easy to set a multilayer server on Java edition. Just run the following command:</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">java</span> -Xmx1024M -Xms1024M -jar minecraft_server.<span class="hljs-number">1</span>.<span class="hljs-number">16</span>.<span class="hljs-number">5</span>.jar nogui<br></code></pre></td></tr></table></figure><p>However, I want the server have a wider device compatibility, so I decide to set up a Bedrock server. Unfortunately,  it only works on Windows or Ubuntu 64-bit system. For some unknown reason, though Raspberry Pi 4B has a 64-bit CPU, its operating system Raspbian is still 32-bit. I manage to install a third-party Debian but still cannot run the Ubuntu package.</p><p><img src="https://z3.ax1x.com/2021/03/25/6LOPDH.md.png" alt="6LOPDH.md.png"></p><p>So I have to use third-party server package. And here it is, <a href="https://getbukkit.org/">https://getbukkit.org/</a></p><h2 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h2><p><strong>1</strong> After downloading the jar file, FTP the file to Raspberry Pi</p><p><strong>2</strong> Writing a sh script to simply the start up process. As you need to allocate the RAM every time.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo nano runserver.sh //making a new sh file and edit with nano<br></code></pre></td></tr></table></figure><p>Type in:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-keyword">while</span> <span class="hljs-literal">true</span><br><br><span class="hljs-keyword">do</span><br><br>sudo java -Xms768M -Xmx1024M -jar /home/mc.jar nogui<br><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure><p>After done, Ctrl+O to write the file and Ctrl+X to exit.</p><p>Note that -Xms and -Xmx indicate the maximum and minimum RAM the server can use. nogui means run without user interface.</p><h2 id="Running-the-server"><a href="#Running-the-server" class="headerlink" title="Running the server"></a>Running the server</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sh runserver.sh <br></code></pre></td></tr></table></figure><p>The sever cannot run successfully at first time as you need to agree the EULA statement first. Stop the server, open eula.txt with nano:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo nano eula.txt<br></code></pre></td></tr></table></figure><p>Change eula to true:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">eula</span>=<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>Run the server again:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sh runserver.sh <br></code></pre></td></tr></table></figure><p><img src="https://z3.ax1x.com/2021/03/25/6LLFhV.md.jpg"></p><p>And the server is running!</p><h2 id="Change-server-properties"><a href="#Change-server-properties" class="headerlink" title="Change server properties"></a>Change server properties</h2><p>Open  server.properties with nano:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">sudo nano server.properties<br></code></pre></td></tr></table></figure><p>The server properties can be changed in the file. These is the explanation from <a href="https://minecraft.fandom.com/wiki/Server.properties">Offical Minecraft Wiki</a></p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-attr">server-name</span>=<span class="hljs-string">Dedicated Server</span><br><span class="hljs-comment"># Used as the server name</span><br><span class="hljs-comment"># Allowed values: Any string without semicolon symbol.</span><br><br><span class="hljs-attr">gamemode</span>=<span class="hljs-string">survival</span><br><span class="hljs-comment"># Sets the game mode for new players.</span><br><span class="hljs-comment"># Allowed values: &quot;survival&quot;, &quot;creative&quot;, or &quot;adventure&quot;</span><br><br><span class="hljs-attr">force-gamemode</span>=<span class="hljs-string">false</span><br><span class="hljs-comment"># force-gamemode=false (or force-gamemode  is not defined in the server.properties)</span><br><span class="hljs-comment"># prevents the server from sending to the client gamemode values other</span><br><span class="hljs-comment"># than the gamemode value saved by the server during world creation</span><br><span class="hljs-comment"># even if those values are set in server.properties after world creation.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># force-gamemode=true forces the server to send to the client gamemode values</span><br><span class="hljs-comment"># other than the gamemode value saved by the server during world creation</span><br><span class="hljs-comment"># if those values are set in server.properties after world creation.</span><br><br><span class="hljs-attr">difficulty</span>=<span class="hljs-string">easy</span><br><span class="hljs-comment"># Sets the difficulty of the world.</span><br><span class="hljs-comment"># Allowed values: &quot;peaceful&quot;, &quot;easy&quot;, &quot;normal&quot;, or &quot;hard&quot;</span><br><br><span class="hljs-attr">allow-cheats</span>=<span class="hljs-string">false</span><br><span class="hljs-comment"># If true then cheats like commands can be used.</span><br><span class="hljs-comment"># Allowed values: &quot;true&quot; or &quot;false&quot;</span><br><br><span class="hljs-attr">max-players</span>=<span class="hljs-string">10</span><br><span class="hljs-comment"># The maximum number of players that can play on the server.</span><br><span class="hljs-comment"># Allowed values: Any positive integer</span><br><br><span class="hljs-attr">online-mode</span>=<span class="hljs-string">true</span><br><span class="hljs-comment"># If true then all connected players must be authenticated to Xbox Live.</span><br><span class="hljs-comment"># Clients connecting to remote (non-LAN) servers will always require Xbox Live authentication regardless of this setting.</span><br><span class="hljs-comment"># If the server accepts connections from the Internet, then it&#x27;s highly recommended to enable online-mode.</span><br><span class="hljs-comment"># Allowed values: &quot;true&quot; or &quot;false&quot;</span><br><br><span class="hljs-attr">white-list</span>=<span class="hljs-string">false</span><br><span class="hljs-comment"># If true then all connected players must be listed in the separate whitelist.json file.</span><br><span class="hljs-comment"># Allowed values: &quot;true&quot; or &quot;false&quot;</span><br><br><span class="hljs-attr">server-port</span>=<span class="hljs-string">19132</span><br><span class="hljs-comment"># Which IPv4 port the server should listen to.</span><br><span class="hljs-comment"># Allowed values: Integers in the range [1, 65535]</span><br><br><span class="hljs-attr">server-portv6</span>=<span class="hljs-string">19133</span><br><span class="hljs-comment"># Which IPv6 port the server should listen to.</span><br><span class="hljs-comment"># Allowed values: Integers in the range [1, 65535]</span><br><br><span class="hljs-attr">view-distance</span>=<span class="hljs-string">32</span><br><span class="hljs-comment"># The maximum allowed view distance in number of chunks.</span><br><span class="hljs-comment"># Allowed values: Positive integer equal to 5 or greater.</span><br><br><span class="hljs-attr">tick-distance</span>=<span class="hljs-string">4</span><br><span class="hljs-comment"># The world will be ticked this many chunks away from any player.</span><br><span class="hljs-comment"># Allowed values: Integers in the range [4, 12]</span><br><br><span class="hljs-attr">player-idle-timeout</span>=<span class="hljs-string">30</span><br><span class="hljs-comment"># After a player has idled for this many minutes they will be kicked. If set to 0 then players can idle indefinitely.</span><br><span class="hljs-comment"># Allowed values: Any non-negative integer.</span><br><br><span class="hljs-attr">max-threads</span>=<span class="hljs-string">8</span><br><span class="hljs-comment"># Maximum number of threads the server will try to use. If set to 0 or removed then it will use as many as possible.</span><br><span class="hljs-comment"># Allowed values: Any positive integer.</span><br><br><span class="hljs-attr">level-name</span>=<span class="hljs-string">Bedrock level</span><br><span class="hljs-comment"># Allowed values: Any string without semicolon symbol or symbols illegal for file name: /\n\r\t\f`?*\\&lt;&gt;|\&quot;:</span><br><br><span class="hljs-attr">level-seed</span>=<span class="hljs-string"></span><br><span class="hljs-comment"># Use to randomize the world</span><br><span class="hljs-comment"># Allowed values: Any string</span><br><br><span class="hljs-attr">default-player-permission-level</span>=<span class="hljs-string">member</span><br><span class="hljs-comment"># Permission level for new players joining for the first time.</span><br><span class="hljs-comment"># Allowed values: &quot;visitor&quot;, &quot;member&quot;, &quot;operator&quot;</span><br><br><span class="hljs-attr">texturepack-required</span>=<span class="hljs-string">false</span><br><span class="hljs-comment"># Force clients to use texture packs in the current world</span><br><span class="hljs-comment"># Allowed values: &quot;true&quot; or &quot;false&quot;</span><br><br><span class="hljs-attr">content-log-file-enabled</span>=<span class="hljs-string">false</span><br><span class="hljs-comment"># Enables logging content errors to a file</span><br><span class="hljs-comment"># Allowed values: &quot;true&quot; or &quot;false&quot;</span><br><br><span class="hljs-attr">compression-threshold</span>=<span class="hljs-string">1</span><br><span class="hljs-comment"># Determines the smallest size of raw network payload to compress</span><br><span class="hljs-comment"># Allowed values: 0-65535</span><br><br><span class="hljs-attr">server-authoritative-movement</span>=<span class="hljs-string">server-auth</span><br><span class="hljs-comment"># Allowed values: &quot;client-auth&quot;, &quot;server-auth&quot;, &quot;server-auth-with-rewind&quot;</span><br><span class="hljs-comment"># Enables server authoritative movement. If &quot;server-auth&quot;, the server will replay local user input on</span><br><span class="hljs-comment"># the server and send down corrections when the client&#x27;s position doesn&#x27;t match the server&#x27;s.</span><br><span class="hljs-comment"># If &quot;server-auth-with-rewind&quot; is enabled and the server sends a correction, the clients will be instructed</span><br><span class="hljs-comment"># to rewind time back to the correction time, apply the correction, then replay all the player&#x27;s inputs since then. This results in smoother and more frequent corrections.</span><br><span class="hljs-comment"># Corrections will only happen if correct-player-movement is set to true.</span><br><br><span class="hljs-attr">player-movement-score-threshold</span>=<span class="hljs-string">20</span><br><span class="hljs-comment"># The number of incongruent time intervals needed before abnormal behavior is reported.</span><br><span class="hljs-comment"># Disabled by server-authoritative-movement.</span><br><br><span class="hljs-attr">player-movement-distance-threshold</span>=<span class="hljs-string">0.3</span><br><span class="hljs-comment"># The difference between server and client positions that needs to be exceeded before abnormal behavior is detected.</span><br><span class="hljs-comment"># Disabled by server-authoritative-movement.</span><br><br><span class="hljs-attr">player-movement-duration-threshold-in-ms</span>=<span class="hljs-string">500</span><br><span class="hljs-comment"># The duration of time the server and client positions can be out of sync (as defined by player-movement-distance-threshold)</span><br><span class="hljs-comment"># before the abnormal movement score is incremented. This value is defined in milliseconds.</span><br><span class="hljs-comment"># Disabled by server-authoritative-movement.</span><br><br><span class="hljs-attr">correct-player-movement</span>=<span class="hljs-string">false</span><br><span class="hljs-comment"># If true, the client position will get corrected to the server position if the movement score exceeds the threshold.</span><br><br><br><span class="hljs-attr">server-authoritative-block-breaking</span>=<span class="hljs-string">false</span><br><span class="hljs-comment"># If true, the server will compute block mining operations in sync with the client so it can verify that the client should be able to break blocks when it thinks it can.</span><br></code></pre></td></tr></table></figure><h2 id="Port-Forwarding-on-Ngrok"><a href="#Port-Forwarding-on-Ngrok" class="headerlink" title="Port Forwarding on Ngrok"></a>Port Forwarding on Ngrok</h2><p>You may notice the server can only be found in local network. How can I invite friends all around the world to the server? Port forwarding is a easy option.</p><p><em>In <a href="https://en.wikipedia.org/wiki/Computer_networking">computer networking</a>, <strong>port forwarding</strong> or <strong>port mapping</strong> is an application of <a href="https://en.wikipedia.org/wiki/Network_address_translation">network address translation</a> (NAT) that redirects a communication request from one <a href="https://en.wikipedia.org/wiki/IP_address">address</a> and <a href="https://en.wikipedia.org/wiki/Port_number">port number</a> combination to another while the <a href="https://en.wikipedia.org/wiki/Network_packet">packets</a> are traversing a network gateway, such as a <a href="https://en.wikipedia.org/wiki/Router_(computing)">router</a> or <a href="https://en.wikipedia.org/wiki/Firewall_(computing)">firewall</a>. This technique is most commonly used to make services on a host residing on a protected or <a href="https://en.wikipedia.org/wiki/IP_masquerading">masqueraded</a> (internal) network available to hosts on the opposite side of the gateway (external network), by remapping the destination IP address and port number of the communication to an internal host.—From Wikipedia</em></p><p>Port forwarding can be set by logging in the wifi configuration page. The step may be varying for different network providers. I set up easily on my Rogers wifi–just a few clicks.</p><h3 id="Port-forwarding-doesn’t-work"><a href="#Port-forwarding-doesn’t-work" class="headerlink" title="Port forwarding doesn’t work?"></a>Port forwarding doesn’t work?</h3><p>In some cases, network providers disable port forwarding as they have limited IP address. In this case, we can use Ngrok VPN tunnel instead.</p><p><em>Ngrok exposes local servers behind NATs and firewalls to the public Internet over secure tunnels.–From Ngork</em></p><p>Set up Ngrok is also straight-forward.</p><p><strong>1</strong> Register an account on Ngrok website and go to <a href="https://dashboard.ngrok.com/get-started/setup">https://dashboard.ngrok.com/get-started/setup</a>. Download Linux(ARM) file. FTP to Raspberry Pi and unzip</p><p><strong>2</strong> Add your authtoken.</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">./ngrok authtoken <span class="hljs-string">&#x27;your private authtoken&#x27;</span><br></code></pre></td></tr></table></figure><p><strong>3</strong> Start tunnel. Note that Minecraft server uses tcp and port 25565. If you want to forward website or email services, notice they uses different agreement and different port.</p><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs perl">./ngrok tcp <span class="hljs-number">25565</span><br></code></pre></td></tr></table></figure><p><strong>4</strong> Check the tunnel IP address on <a href="https://dashboard.ngrok.com/endpoints/status">https://dashboard.ngrok.com/endpoints/status</a>. Enter the IP address in Minecraft. The server should be able to connect.</p><p><img src="https://z3.ax1x.com/2021/03/25/6LLit0.md.jpg" alt="6LLit0.md.jpg"></p><p>Multilayer is also supported.</p><p><img src="https://z3.ax1x.com/2021/03/25/6LLPkq.md.jpg" alt="6LLPkq.md.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>fun</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raspberry Pi</tag>
      
      <tag>minecraft</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Lidar System</title>
    <link href="/2020/04/30/lidarsys/"/>
    <url>/2020/04/30/lidarsys/</url>
    
    <content type="html"><![CDATA[<h1 id="Device-Overview"><a href="#Device-Overview" class="headerlink" title="Device Overview"></a>Device Overview</h1><p>The Time of Flight sensor is the core part of this system, it collects the distance data by taking a 360 degree measurement. The ToF is assembled on the slip ring which allows the ToF rotating freely. A stepper motor is used to drive the slip ring by gears. An external LED is used for status indication and a push button is used to start the measurement.<br>By pushing the button, the stepper motor will automatically drive the ToF, after taking a 360 degree measurement, it will stop and a 3D visualized graph will pop up on the PC.</p><img src="https://s1.ax1x.com/2020/07/15/Ua7kin.png" width = "300" height = "200" alt="Block Diagram" align=center /><h1 id="Key-parts-of-the-application"><a href="#Key-parts-of-the-application" class="headerlink" title="Key parts of the application"></a>Key parts of the application</h1><ul><li>ToF module: ST VL53L1X with 940 nm invisible laser</li><li>Microcontroller: Texas Instruments SimpleLink™ Ethernet MSP432E401Y MCU Launchpad™</li><li>Stepper motor: 28BYJ-48</li><li>Stepper motor driver board: ULN2003</li><li>Python 3.6.8 with pyserial and Open3D library</li></ul><h1 id="Device-Characteristics-Table"><a href="#Device-Characteristics-Table" class="headerlink" title="Device Characteristics Table"></a>Device Characteristics Table</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>Operating voltage</td><td>5.0V</td></tr><tr><td>Max ranging distance</td><td>400mm</td></tr><tr><td>Operating Temperature</td><td>-20°C ~ 85°C</td></tr><tr><td>Avg time needed for a single measurement</td><td>21s</td></tr><tr><td>Total measurement points</td><td>296</td></tr><tr><td>Bus speed</td><td>24MHz</td></tr><tr><td>Baud rate</td><td>115200</td></tr><tr><td>Max ranging frequency</td><td>50Hz</td></tr><tr><td>ADC sampling ratey</td><td>48Hz</td></tr></tbody></table><h1 id="Detailed-Description"><a href="#Detailed-Description" class="headerlink" title="Detailed Description"></a>Detailed Description</h1><p>A 3D time-of-flight (TOF) camera works by illuminating the scene with a modulated light source,and observing the reflected light (Figure 1). The phase shift between the illumination and the reflection is measured and translated to distance. For VL53L1X, it measures the absolute distance by using the formula Δd &#x3D; v*t.</p><p>The farthest distance it can measure is around 400mm as it may be affected by ambient light. The VL53L1X can be configured and its distance data can be obtained through I²C bus the SCL and SDA lines on the ToF allows the I²C to communicate with MSP432E401Y microcontroller. To construct a point cloud system, a stepper motor will drive the ToF to do a full cycle rotation to gather the distance data, and those data will be stored in A&#x2F;D, processed to coordinates and sent to a PC for visualization. To convert distance into coordinates, the current angle will be calculated first and use trigonometric to get the related coordinates. Define current angle (α), current step (n), total step (m), distance (d). X component (x) and Y component (y) can be calculated by:</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs abnf">α<span class="hljs-operator">=</span>n/m*<span class="hljs-number">2</span>*pi<br><br><span class="hljs-attribute">x</span><span class="hljs-operator">=</span>d*sin(α)<br><br><span class="hljs-attribute">y</span><span class="hljs-operator">=</span>d*cos(α)<br></code></pre></td></tr></table></figure><p>For example, if the current step is 256, total step is 512, distance measured is 200.00mm. Then,</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs abnf">α<span class="hljs-operator">=</span><span class="hljs-number">256</span>/<span class="hljs-number">512</span>*<span class="hljs-number">2</span>*pi<span class="hljs-operator">=</span>pi<br><br><span class="hljs-attribute">x</span><span class="hljs-operator">=</span><span class="hljs-number">200.00</span>*sin(pi)<span class="hljs-operator">=</span><span class="hljs-number">0</span><br><br><span class="hljs-attribute">y</span><span class="hljs-operator">=</span><span class="hljs-number">200.00</span>*cos(pi)<span class="hljs-operator">=</span>-<span class="hljs-number">200.00</span><br></code></pre></td></tr></table></figure><p>So the X component is 0 and the Y component is -200.00mm.</p><img src="https://s1.ax1x.com/2020/07/15/Ua76Qf.png" width = "300" height = "200" alt="" align=center /><h1 id="Circuit-Schematic"><a href="#Circuit-Schematic" class="headerlink" title="Circuit Schematic"></a>Circuit Schematic</h1><p><img src="https://s1.ax1x.com/2020/07/15/Ua7Reg.md.png"></p><h1 id="Logic-Flowchart"><a href="#Logic-Flowchart" class="headerlink" title="Logic Flowchart"></a>Logic Flowchart</h1><ul><li><p>Microcontroller<br><img src="https://s1.ax1x.com/2020/07/15/Ua7WwQ.md.jpg"></p></li><li><p>Python</p></li></ul><p><img src="https://s1.ax1x.com/2020/07/15/Ua7foj.md.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>project</category>
      
    </categories>
    
    
    <tags>
      
      <tag>microcontroller</tag>
      
      <tag>lidar</tag>
      
      <tag>python</tag>
      
      <tag>stepper motor</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
